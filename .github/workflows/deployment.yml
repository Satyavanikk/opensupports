name: Deploy OpenSupports

on:
  push:
    branches:
      - main  # Automatically triggers on push to the 'main' branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS CLI
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
        echo "[default]" > ~/.aws/config
        echo "region=${{ secrets.AWS_REGION }}" >> ~/.aws/config

    - name: Compress Application Files
      run: zip -r app.zip ./*

    - name: Upload and Deploy Application Files to EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Upload application files to the EC2 instance
        scp -o StrictHostKeyChecking=no app.zip ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/app.zip

        # Connect to the EC2 instance and deploy the application
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo rm -rf /var/www/html/*
          sudo mkdir -p /tmp/deploy
          sudo unzip /tmp/app.zip -d /var/www/html/
        EOF

    - name: Restart Web Server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo systemctl restart apache2 || sudo systemctl restart nginx"
